{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dframo"
		},
		"AzureDataLakeStore_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataLakeStore'"
		},
		"AzureDataLakeStoreGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStoreGen2'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"SinkAzureTableStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SinkAzureTableStorage'"
		},
		"SourceAzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SourceAzureBlobStorage'"
		},
		"SapHanav2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SapHanav2'"
		},
		"SapTable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable'"
		},
		"SourceSapHana_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SourceSapHana'"
		},
		"AzureDataLakeStore_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://dlsramo.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "422de20e-cf63-4006-ac2b-dcb90beab324"
		},
		"AzureDataLakeStore_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "af5eb6a4-5494-4a9e-a659-b79c92301b8e"
		},
		"AzureDataLakeStore_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "78a25c99-6a22-4ab6-b979-26369b27de87"
		},
		"AzureDataLakeStore_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG_RAMO"
		},
		"AzureDataLakeStoreGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asaramo.dfs.core.windows.net"
		},
		"SapTable_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "300"
		},
		"SapTable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "igerencia"
		},
		"SapTable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "192.168.220.217"
		},
		"SapTable_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "10"
		},
		"SourceSapHana_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "192.168.220.216:37015"
		},
		"SourceSapHana_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AZURE"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('AzureDataLakeStore_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStore_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureDataLakeStore_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoreGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoreGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoreGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5671516797244194.14.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "0911-115841-troth59"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkAzureTableStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('SinkAzureTableStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SourceAzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/10 Am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-10-13T15:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/12 pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-10-13T17:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-10-13T19:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/8 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-10-13T13:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFIgerenciaIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFRamoIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkAzureTableDWH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SinkAzureTableStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SinkAzureTableStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkParquetRaw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkFilePath": {
						"type": "string"
					},
					"SinkFileName": {
						"type": "string"
					},
					"SourceFileExtension": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@{dataset().SinkFileName}.@{dataset().SourceFileExtension}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SinkFilePath",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkParquetRawGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkFilePath": {
						"type": "string"
					},
					"SinkFileName": {
						"type": "string"
					},
					"SourceFileExtension": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SINK"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{dataset().SinkFileName}.@{dataset().SourceFileExtension}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SinkFilePath",
							"type": "Expression"
						},
						"fileSystem": "fsramo"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceAzureBlobStorageDWH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkFilePath": {
						"type": "string"
					},
					"SinkFileName": {
						"type": "string"
					},
					"SourceFileExtension": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SOURCES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().SinkFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SinkFilePath",
							"type": "Expression"
						},
						"container": "fsramo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceAzureSqlTableFramework')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"Schema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SOURCES"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapHanav2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('SapHanav2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ADFRamoIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ADFRamoIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable_properties_typeProperties_clientId')]",
					"language": "ES",
					"sncMode": false,
					"userName": "[parameters('SapTable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable_password')]"
					},
					"server": "[parameters('SapTable_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "ADFRamoIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ADFRamoIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSapHana')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"server": "[parameters('SourceSapHana_properties_typeProperties_server')]",
					"authenticationType": "Basic",
					"userName": "[parameters('SourceSapHana_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SourceSapHana_password')]"
					}
				},
				"connectVia": {
					"referenceName": "ADFRamoIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ADFRamoIR')]"
			]
		}
	]
}